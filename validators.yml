## YAML Template.
---
after_period:
  3: now()
  valid: sql(select timestampdiff($2,$3,$value) <= $v1) 
  error: $name must be after $v1 $v2

alphabetic: must_be([a-zA-Z]+,alphabetic)

at_least:
  valid: /^.{$1,}$/
  2: characters
  error: $name must be at least $1 $2

before_period:
  3: now()
  valid: sql(select timestampdiff($2,$value,$3) <= $v1) 
  error: $name must be before $v1 $v2
  
between:
  valid: range($1,$2,$3)
  error: $1 ($v1) must be between $v2 and $v3
  
contains_at_least:
  valid: /$1/
  error: $name must contain at least $2

contains_only:
  valid: /^$1$/
  2: $code
  error: $name must only contain $2
  
country: 
  valid: in(mukonin_contact.country.code)

currency:
  valid: /^-?\D{,2}\d+\.\d\d$/
  error: $name must be in currency form
  
date:
  valid:
    - /^\d{4}([-\/])(0\d|1[0-2])\1([0-2][0-9]|3[01])$/
    - relate_time(Y-m-d,$1)
    
datetime:
  valid:
    - /^\d{4}([-\/])(0\d|1[0-2])\1([0-2][0-9]|3[01]) \d\d:\d\d(:\d\d)?$/
    - relate_time(Y-m-d H:i:s,$1)

decimal: 
  valid: must_be(^-?\d+\.\d+,decimal)
  
digits: 
  valid: contains_only(\d)

either:
  error: Invalid $name
  
email: 
  valid: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i

equals: 
  valid: /^\s*$1\s*$/
  error: $name must equal $1
  
exists:
  error: $name does not exist
  
extension: 
  valid: /\.$1$/i
  error: $name must have be of type '$1'

find_in:
  error: No such $name ($value)
  
future_time:
  error: $name must be in the future
  
greater:
  error: $name must be greater than $1 ($v1)
  
greater_equal:
  error: $name must not be less than $1 ($v1)
  
in:
  error: No such $name ($value)
  
int_tel:
  valid:
    - /^\+\d+[- \d]*$/
    - at_least(10,digits)
  error: Please use national number format for $name, e.g. 0123456789 

is: must_be($1)
  
less:
  error: $name must be less that $1 ($v1)

less_equal:
  error: $name must not be greater than $1 ($v1)
  
match:
  valid: /^$v1$/
  error: $name must be the same as $1
 
matches: match($1)
  
money: 
  valid: /^\d+(\.\d+)?$/

must_be:
  valid: /^$1$/
  error: $name must be $2
  
name: 
  valid:
    - at_least(2,characters)
    - /^[\w\d']{2}[\w\d\s'-]*$/
    - /^((?!'').)*$/
  
national_tel: 
  valid:
    - /^0\d+[- \d]*$/
    - at_least(10,digits)
  error: Please use national number format for $name, e.g. 0123456789

not: 
  error: Invalid $name
  
numeric: must_be(-?\d+(\.\d+)?,numeric)

password: 
  valid:
    - at_least(6,characters)
    - contains_at_least([A-Z]+,one uppercase letter)
    - contains_at_least([a-z]+,one lowercase letter)
    - contains_at_least([^a-zA-Z]+,one digit or special character)
    - password_uncommon

password_common:
  valid:
    - or
    - /^p[a@]ssw[o0]rd$/i
    - /^pass(word)?\d+$/i
    - /^querty\d+$/i
    - /^\d+$/
  error: Use a common password

password_uncommon:
  valid: 
    - not(/^p[a@]ssw[o0]rd$/i)
    - not(/^pass(word)?\d+$/i)
    - not(/^querty\d+$/i)
  error: Password too simple or common
  
past_time:
  error: $name must be in the past
  
proc: /^([a-z_]+)(?:\((.*)\))*$/

provided: 
  2: provided
  valid: must_be(.+,$2)

quantity:
  valid: digits
  error: $name must be a quantity

range:
  valid:
    - greater_equal($v2)
    - less_equal($v3)
  error: $1 ($v1) must be in range $v2 to $v3
  
regex:
  error: Invalid $name
  
relate_time:
  error: $name must be in the $2
  
same_month:
  valid: sql(select substr('$value',1,8) = substr('$v1',1,8))
  error: $name must be in the same month as $1 ($v1)

same_year:
  valid: sql(select substr('$value',1,4) = substr('$v1',1,4))
  error: $name must be in the same year as $1 ($v1)

sql:
  error: Invalid $name
  
telephone: /^[+0]\d+$/

time: 
  valid:
    - /^\d\d:\d\d(:\d\d)?$/
    - relate_time(H:i, $1)
    
unique: 
  valid: not(in($1))
  error: $name ($value) already exists  

url: /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/

visitable: 
  error: $name $value is not accessible from this site

za_code: /^\d{4}$/

za_company_reg:
  valid:
    - earlier_than(now(Y))
    - /^(19|20)[0-9]{2}\/?[0-9]{6}\/?[0-9]{2}$/

za_id: 
  valid:
    - less_than(today)
    - /^\d{2}((0[1-9])|(1[0-2]))((0[1-9])|([12][0-9])|(3[01]))\d{7}$/
  
  
za_tax_ref: /^\d{10}$/
  
  
