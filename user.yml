## YAML Template.
---

activate:
  access: admin
  desc: Activate inactive user
  audit: sql(select first_name, last_name, email_address from user where id = '$key')
  post: 
    - sql_exec: update user set active = 1 where id = '$key'
  
audit_trail:
  access: admin 
  type: datatable
  sort: when
  sort_order: desc
  page_size: 15
  flags: 
    - filter
    - show_header
    - show_titles
  report_title: User Audit Trail
  actions:
    - print
    - export
  fields:
    - when: { width: 12%,name: Time }
    - first_name: { width: 10% }
    - last_name: { width: 16% }
    - email: { width: 18% }
    - what: { width: 18%, name: Action }
    - detail: { width: 35% }
  sql: |
    select t.create_time, u.first_name, u.last_name,u.email_address, t.action, t.detail 
      from audit_trail t join user u on t.user_id = u.id
        
change_password:
  type: labelled_input_page
  width: 700
  desc: 
    Please enter your new password as well as the OTP (One Time Pin) that you received on your email or cellphone.
  inputs:
    - otp
    - email: { attr: disabled }
    - type: password_input
    - password
    - confirm_password
  actions:
    - reset_password


check_otp:
  type: labelled_input_page
  name: One Time Pin
  desc: >
    Please enter the OTP(One Time Pin) that you received on your email or cellphone.
    It is possible that the OTP email was sent to the Junk folder on your mail
  inputs:   
    - otp
  values:
    - sql_values: select lpad(floor(rand()*9999),4,'0') server_otp, now() time_of_otp
    - write_session: server_otp,time_of_otp
    - clear_values
  actions:
    - next:
        post:
          - sql_values: select lpad(floor(rand()*9999),4,'0') server_otp, now() time_of_otp
          - write_session: server_otp,time_of_otp
          - send_email:
              subject: One Time Password
              from: $support
              to: $first_name $last_name <$email>
              message: >
                Good day<br><br>
                You are currently trying to change your email address. 
                If you have not requested this, please inform the System Adminstrator.<br><br>
                Your One Time Password is : <b>$otp</b>. <br><br>
                Regards<br>
                Customer Operations
          - clear_values


complete_registration:
  type: labelled_input_page
  width: 700
  desc: |
    Thank you. You have been provisionally registered. <be>
    You will have limited access to the system
    until your registration has been approved. <br>
    Please check your email for registration status.
  actions:
    - login: { action: dialog }

confirm_details:
  type: info_page
  desc: |
    Below is a list of all the information you have entered to register on the system.
    If you are happy with everything, please accept the terms and conditions to 
    complete the registration process.
  lines:
    - title
    - first_name
    - last_name
    - cellphone
    - email
    - password: { value: "**************" }
    - agree_terms: { type: checkbox, template: question_input }
  values:
    - read_session: title,first_name,last_name,cellphone,email
  actions:
    - confirm_details: { name: Submit, desc: "" }
  post:
    - read_session: title,first_name,last_name,cellphone,email,password
    - sql_exec: >
        insert into user(email_address, password, title, first_name,
          last_name,cellphone,active,roles)
        values('$email',password('$password'),'$title', '$first_name',
          '$last_name','$cellphone',1,'reg')
    - sql_values: select last_insert_id() uid
    - sql_exec: >
        insert into audit_trail(user_id, action, detail)
        values(last_insert_id(), 'Register', '$title $first_name $last_name $cellphone $email')
    - trigger: "wizard-next,#user_confirm_details"

              

    
create:
  type: labelled_input_page
  access: admin
  audit: >
    Title: $title, First Name:$first_name, Last Name:$last_name, Cellphone:$cellphone, E-Mail:$email, Role:$role
  width: 500
  name: Add User
  desc:  Add a new user
  inputs: 
    - title: {type: dropdown}          
    - first_name
    - last_name
    - cellphone
    - email
    - type: password_input
    - password
    - confirm_password
    - role: { type: dropdown }
  actions:
    - create

deactivate:
  access: admin
  desc: Deactivate this user
  audit: sql(select first_name, last_name, email_address from user where id = $key)

 
delete:
  type: deactivate

edit:
  access: [admin]
  audit: $title,$first_name,$last_name,$cellphone,$email_address,$assigned_role
  action: dialog
  url: /user/modify

enter_credentials:
  name: User Credentials
  type: labelled_input_page
  desc: Fill in user information used to uniquely identify the user on the system
  inputs: 
    - title: {type: dropdown}          
    - first_name
    - last_name
    - cellphone
    - email: { valid: [unique(user.email_address)] }
    - type: password_input
    - password
    - confirm_password
  actions:
    - next:
        post:
          - sql_values: select lpad(floor(rand()*9999),4,'0') server_otp, now() time_of_otp
          - write_session: server_otp,time_of_otp,title,first_name,last_name,cellphone,email,password
          - send_email:
              subject: One Time Password
              from: $support
              to: $first_name $last_name <$email>
              message: >
                Good day<br><br>
                Below is your one time password, required to continue with your application.<br><br>
                Your One Time Password is : <b>$server_otp</b>. <br><br>
                Regards<br>
                Customer Operations
          - clear_values

  
history:
  access: [admin]
  type: datatable
  sort: when
  sort_order: desc
  flags: 
    - show_titles
  fields:
    - when : { width: 14%,name: Time }
    - action: { width: 30% }
    - detail: { width: 55% }
  sql: select create_time, action, detail from audit_trail where user_id = $key
 
  
is_active:
  valid: sql(select active from user where email_address = '$value')
  error: |
    Account $value has been deactivated. 
    Please ask the administrator to reactivate your account

is_password_for:
  valid: 
    - depends(email,is_registered)
    - depends(email,is_active)
    - depends(email,is_unlocked)
    - sql(select password=password('$value') from user where email_address = '$v1')
  error: 
    - sql_exec: update user set attempts = attempts+1 where email_address = '$v1'
    - sql_exec: >
        insert into audit_trail(user_id, action, detail) 
          select id, 'Failed Login Attempt', '$v1' from user where email_address = '$v1'
    - error: Invalid user name or password for $v1

is_registered:
  valid: sql(select 1 from user where email_address = '$value')
  error: >
    There is no such email '$value' registered on the system.<br>
    Click on <b>Register</b> if you would like to register to use the system.
  
is_unlocked:
  valid: sql(select attempts < 5 from user where email_address = '$value')
  error: |
    Account $value locked because of too many incorrect attempts.
    Please ask the administrator to unlock your account.
  
list:
  access: [admin]
  type: datatable
  name: Users
  sort: create_time
  sort_order: desc
  page_size: 15
  flags: 
    - filter
    - show_header
    - show_titles
  report_title: User Report
  slide: { access: admin }
  row_actions:
    - edit
    - activate: { access: admin }
    - deactivate: { access: admin }
  footer_actions:
    - print
    - export
  fields:
    - key: { hide: yes }
    - create_time: { width: 14% }
    - email: { width: 20% }
    - first_name: { width: 13% }
    - last_name: { width: 13% }
    - cellphone: { width: 12% }
    - role: { width: 9% }
    - status: { width: 8% }
    - actions
  expand:
    action:
      pages:
        - user/history
  sql: |
    select distinct u.id, u.create_time,email_address, u.first_name, u.last_name,
      u.cellphone, r.name, 
      if(u.active=1,'active','inactive'),
      if(u.active=1,'expand,slide,edit,deactivate','expand,slide,edit,activate')
    from user u left join user_role ur on u.id = ur.user_id 
      left join role r on ur.role_code = r.code
      where r.code != 'super'

login:
  access: public
  type: labelled_input_page
  width: 500
  validate: all
  desc: Fill in your credentials below and click Login to logon
  inputs:
    - email: { valid: [is_registered, is_active, is_unlocked] }
    - password: { type: password_input, valid: is_password_for(email) }
  actions:
    - login
    - forgot_password: { action: dialog }
  post:
    - sql_values:
        select id uid, partner_id, email_address email, first_name, last_name, 
          concat(first_name, ' ', last_name) full_name,
          cellphone, roles, groups, 'home' page
        from user
        where email_address='$email'
    - load_lineage: [roles,role,code,base_code]
    - sql_exec: update user set attempts = 0 where id = $uid
    - write_session: uid,partner_id,roles,email,first_name,last_name,full_name,cellphone
    - close_dialog
    - redirect: /$page
      
modify:
  type: labelled_input_page
  desc: Change user details
  width: 600
  inputs: 
    - title: {type: dropdown}          
    - first_name
    - last_name
    - cellphone
    - email_address
    - role: 
        name: Assigned Role
        type: dropdown
        valid: provided
  values:
    - sql_values: |
        select title,first_name,last_name,cellphone,email_address,r.code
        role  
        from user u left join user_role ur on u.id = ur.user_id
        left join role r on r.code=ur.role_code
        where id = $key
  actions:
    - update

my_audit_trail:
  name: My Audit Trail
  access: reg 
  type: datatable
  sort: when
  sort_order: desc
  page_size: 15
  flags: 
    - filter
    - show_header
    - show_titles
  report_title: My Audit Trail
  actions:
    - print
    - export
  fields:
    - when: { name: Time }
    - action
    - detail
  sql: |
    select create_time, action, detail 
      from audit_trail where user_id = $uid

otp:
  name: OTP
  desc: One Time Pin
  valid: >
    sql(select 1 from dual where timestampdiff(minute, '$time_of_otp', now()) < 30 and '$otp'='$server_otp')


profile:
  type: labelled_input_page
  access: [reg]
  name: View Own Profile
  desc: $name
  width: 600
  inputs: 
    - title: {type: dropdown}          
    - first_name
    - last_name
    - cellphone
    - email_address
    - role: { attr: disabled }
  values:
    - sql_values: |
        select title,first_name,last_name,cellphone,email_address,r.code role 
        from user u left join user_role ur on u.id = ur.user_id 
        join role r on r.code = ur.role_code
        where id = $uid
  actions:
    - update

register:
  access: public
  type: wizard
  name: Register User
  desc: Register as a new user of the system
  height: 630
  width: 700
  steps: 
    - enter_credentials
    - check_otp
    - confirm_details: { next: false }
    - complete_registration


reset_password:
  audit: Changed password


start_reset_password:
  width: 600
  name: Reset Password
  desc: Start reset password process
  type: labelled_input_page    
  inputs: 
    - email    
  actions:
    - next:
        call: user::start_reset_pw()
        action: post
   

update:
  audit: $title $first_name $last_name $cellphone $role $email_address
  
