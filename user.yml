## YAML Template.
---

activate:
  access: admin
  validate: none
  desc: Activate inactive user
  audit: sql(select first_name, last_name, email_address from user where id = '$key')
  post:
    - sql_exec: update user set active = 1 where id = '$key'
    - refresh: "#main table"

audit_trail:
  access: admin
  type: datatable
  sort: when
  sort_order: desc
  page_size: 15
  flags:
    - filter
    - show_header
    - show_titles
  report_title: User Audit Trail
  actions:
    - print
    - export
  fields:
    - when: { width: 12%,name: Time }
    - first_name: { width: 10% }
    - last_name: { width: 16% }
    - email: { width: 18% }
    - what: { width: 18%, name: Action }
    - detail: { width: 35% }
  sql: |
    select t.create_time, u.first_name, u.last_name,u.email_address, t.action, t.detail
      from audit_trail t join user u on t.user_id = u.id

check_otp:
  type: wizard_page
  name: One Time Pin
  desc: >
    Please enter the OTP(One Time Pin) that you received on your email or cellphone.
    It is possible that the OTP email was sent to the Junk folder on your mail.
    <br><br>
    Note: If you navigated backwards to change something, you will be sent another OTP.
    Please make sure you enter this OTP instead of the first one.
  inputs:
    - otp
  values:
    - sql_values: select lpad(floor(rand()*9999),4,'0') server_otp, now() time_of_otp
    - write_session: server_otp,time_of_otp
    - read_session: email,first_name,last_name
    - send_email:
        subject: One Time Password
        from: $support
        to: $first_name $last_name <$email>
        message: >
          Good day<br><br>
          You are currently trying to register on the system or change your email address.
          If you have not requested this, please inform the System Adminstrator.<br><br>
          Your One Time Password is : <b>$server_otp</b>. <br><br>
          Regards<br>
          Customer Operations
    - clear_values

complete_registration:
  type: wizard_page
  width: 700
  desc: |
    Thank you. You have been provisionally registered. <be>
    You will have limited access to the system
    until your registration has been approved. <br>
    Please check your email for registration status.
  navigate:
    - login: { action: dialog }

confirm_registration:
  type: wizard_page
  desc: |
    Below is a list of all the information you have entered to register on the system.
    If you are happy with everything, please accept the terms and conditions to
    complete the registration process.
  inputs:
    - template: info_line
    - type: info_text
    - title
    - first_name
    - last_name
    - cellphone
    - email
    - password: { value: "**************" }
    - agree_terms: { type: checkbox, template: question_input }
  values:
    - read_session: title,first_name,last_name,cellphone,email
  next:
    validate: none
    post:
      - read_session: title,first_name,last_name,cellphone,email,password
      - sql_exec: >
          insert into user(email_address, password, title, first_name,
            last_name,cellphone,active,roles)
          values('$email',password('$password'),'$title', '$first_name',
            '$last_name','$cellphone',1,'reg')
      - sql_values: select last_insert_id() uid
      - write_session: uid
      - clear_values
  audit: $title $first_name $last_name $cellphone $email




create:
  type: labelled_input_page
  access: admin
  audit: >
    Title: $title, First Name:$first_name, Last Name:$last_name, Cellphone:$cellphone, E-Mail:$email, Role:$role
  width: 500
  name: Add User
  desc:  Add a new user
  inputs:
    - title: {type: dropdown}
    - first_name
    - last_name
    - cellphone
    - email
    - type: password_input
    - password
    - confirm_password
    - role: { type: dropdown }
  actions:
    - create

deactivate:
  access: admin
  validate: none
  desc: Deactivate this user
  confirmation: Are you sure you want to deactivate this user?
  audit: sql(select first_name, last_name, email_address from user where id = '$key')
  post:
    - sql_exec: update user set active = 0 where id = '$key'
    - send_email:
        to: $full_name <$email>
        subject: Your account has been deactivated
        message: >
          Dear <b>$full_name</b> <br><br>
          The administrator would like to inform you that your account has been activated.<br><br>
          Regards,<br><br>
          <b>Customer Operations</b>
    - refresh: "#main table"

delete:
  type: deactivate

edit:
  access: [admin]
  action: dialog
  url: /user/modify

enter_credentials:
  name: User Credentials
  type: wizard_page
  desc: Fill in user information used to uniquely identify the user on the system
  inputs:
    - title: {type: dropdown}
    - first_name
    - last_name
    - cellphone
    - email: { valid: [unique(user.email_address)] }
    - type: password_input
    - password
    - confirm_password
  next:
    post:
      - write_session: [title,first_name,last_name,cellphone,email,password]

history:
  access: [admin]
  type: datatable
  sort: when
  sort_order: desc
  flags:
    - show_titles
  fields:
    - when : { width: 14%, name: Time }
    - what: { width: 30%, name: Action }
    - detail: { width: 55% }
  sql: select create_time, action, detail from audit_trail where user_id = $key


is_active:
  valid: sql(select active from user where email_address = '$value')
  error: |
    Account $value has been deactivated.
    Please ask the administrator to reactivate your account

is_password_for:
  valid:
    - depends(email,email)
    - depends(email,is_registered)
    - depends(email,is_active)
    - depends(email,is_unlocked)
    - sql(select password=password('$value') from user where email_address = '$v1')
  error:
    - sql_exec: update user set attempts = attempts+1 where email_address = '$v1'
    - sql_exec: >
        insert into audit_trail(user_id, action, detail)
          select id, 'Failed Login Attempt', '$v1' from user where email_address = '$v1'
    - error: Invalid user name or password for $v1

is_registered:
  valid: sql(select 1 from user where email_address = '$value')
  error: >
    There is no such email '$value' registered on the system.<br>
    Click on <b>Register</b> if you would like to register to use the system.

is_unlocked:
  max_attempts: 5
  valid: sql(select attempts < $max_attempts from user where email_address = '$value')
  error: |
    Account $value locked because of too many incorrect attempts.
    Please ask the administrator to unlock your account.

list:
  access: [admin]
  type: datatable
  name: Users
  sort: create_time
  sort_order: desc
  page_size: 15
  flags:
    - filter
    - show_header
    - show_titles
  report_title: User Report
  row_actions:
    - activate
    - deactivate
    - edit: { action: dialog }
  footer_actions:
    - print
    - export
  fields:
    - key: { hide: yes }
    - create_time: { width: 14% }
    - email: { width: 20% }
    - first_name: { width: 13% }
    - last_name: { width: 13% }
    - cellphone: { width: 12% }
    - roles: { width: 9% }
    - status: { width: 8% }
    - style
    - actions
  expand:
    pages:
      - user/history
  sql: >
    select id, create_time, email_address, first_name, last_name, cellphone, roles, status, status, actions from (
       select u.id, u.create_time,email_address, u.first_name, u.last_name,
        u.cellphone, group_concat(r.name) roles,
        if(u.active=1,'active','inactive') status,
        if(u.active=1,'expand,slide,edit,deactivate','expand,slide,edit,activate') actions
      from user u left join role r on find_in_set(r.code,u.roles)
      group by u.id
    ) tmp where 1 = 1

login:
  access: public
  type: input_page
  width: 500
  desc: Fill in your credentials below and click Login to logon
  inputs:
    - email: { valid: [is_registered, is_active, is_unlocked] }
    - password: { type: password, valid: is_password_for(email) }
  actions:
    - login
    - forgot_password: { action: dialog }
  post:
    - sql_values: |
        select id uid, partner_id, email_address email, first_name, last_name,
          concat(first_name, ' ', last_name) full_name,
          cellphone, roles, groups, 'home' page
        from user
        where email_address='$email'
    - load_lineage: [roles,role,code,base_code]
    - sql_exec: update user set attempts = 0 where id = $uid
    - write_session: uid,partner_id,roles,email,first_name,last_name,full_name,cellphone
    - close_dialog
    - redirect: /$page

modify:
  type: labelled_input_page
  desc: Change user details
  access: [admin]
  width: 600
  inputs:
    - title: {type: dropdown}
    - first_name
    - last_name
    - cellphone
    - email_address
    - role:
        name: Assigned Role
        type: dropdown
        valid: provided
  values:
    - sql_values: |
        select title,first_name,last_name,cellphone,email_address,roles role
        from user
        where id = $key
  actions:
    - modify: { name: Update }
  post:
    - read_values: {id: $key, roles: $role }
    - sql_update: [user, id, title, first_name, last_name, email_address, roles]
    - clear_values
    - close_dialog: User details updated
    - refresh: "#main table"
  audit: $title,$first_name,$last_name,$cellphone,$email_address,$role

my_audit_trail:
  type: audit_trail
  name: My Audit Trail
  access: reg
  sql: |
    select t.create_time, u.first_name, u.last_name,u.email_address, t.action, t.detail
      from audit_trail t join user u on t.user_id = u.id and t.user_id = $uid

otp:
  name: OTP
  desc: One Time Pin
  valid: >
    sql(select 1 from dual where timestampdiff(minute, '$time_of_otp', now()) < 30 and '$otp'='$server_otp')


profile:
  type: input_page
  access: [reg]
  name: View Own Profile
  desc: These are your details on the system. You can make changes here to update them.
  width: 600
  inputs:
    - title: {type: dropdown}
    - first_name
    - last_name
    - cellphone
    - email_address
    - role: { attr: disabled }
  values:
    - sql_values: |
        select title,first_name,last_name,cellphone,email_address,group_concat(r.name) role
        from user u left join role r on find_in_set(r.code,u.roles)
        where id = $uid
        group by id
  actions:
    - profile_update

profile_update:
  name: Update Profile
  audit: $title $first_name $last_name $cellphone $email_address
  post:
    - sql_exec: |
        update user
        set
          title='$title', first_name='$first_name', last_name='$last_name',
          cellphone='$cellphone', email_address = '$email_address'
        where id = '$uid'
    - close_dialog: Successfully updated


register:
  access: public
  type: wizard
  name: Register User
  desc: Register as a new user of the system
  height: 630
  width: 700
  steps:
    - enter_credentials
    - check_otp: { clear: true } 
    - confirm_registration: { clear: true}
    - complete_registration
